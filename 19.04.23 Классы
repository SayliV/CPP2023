//методы класса
#include <iostream>
using namespace std;

class Automobile{
private:
    int velocity =80;
    int fuel_by_100 =10;
    int masss =8000;
    int tank =80;

public:
    string color="red";
    int wheels=4, lights =2,  fuel=50;

    void rep_priv(){
    cout<<velocity<<endl;
    cout<<fuel_by_100<<endl;
    cout<<masss<<endl;
    cout<<tank<<endl;

    }

};

int main (){
    Automobile jeep;
    jeep.rep_priv();
    return 0;

}


//констукторы класса

//
#include <iostream>
using namespace std;

class Automobile{
private:
    int velocity,fuel_by_100, masss,tank;

public:
    string color;
    int wheels, lights, fuel;
    Automobile();
    void rep_priv();

};


Automobile::Automobile(){
masss=800; velocity=180; fuel_by_100=12;
tank=78; wheels=4; lights=6; fuel=40;
color="gren";
}



void Automobile::rep_priv(){cout<<velocity<<endl;
    cout<<fuel_by_100<<endl;
    cout<<masss*2<<endl;
    cout<<tank<<endl;
    }

int main (){
    Automobile jeep;
    jeep.rep_priv();
    return 0;
}


//параметрический конструктор
#include <iostream>
using namespace std;

class Automobile{
private:
    int velocity,fuel_by_100, masss,tank;

public:
    string color;
    int wheels, lights, fuel;
    Automobile(int f,int wh,int t, int fb100);
    void rep_priv();

};


Automobile::Automobile(int f,int wh,int t, int fb100){
masss=800; velocity=180;
color="gren"; lights=6;
fuel_by_100=fb100;tank=t;
wheels=wh;  fuel=f;

}



void Automobile::rep_priv(){cout<<velocity<<endl;
    cout<<fuel_by_100<<endl;
    cout<<masss<<endl;
    cout<<tank<<endl;
    }

int main (){
    Automobile jeep(20, 40,75,80);
    jeep.rep_priv();
    return 0;
}
