/*Формула Зеллера для вычисления дня недели по григорианскому календарю выглядит следующим образом:

h = (q + floor(13*(m+1)/5) + K + floor(K/4) + floor(J/4) - 2*J) mod 7

где:
- h - номер дня недели (0 - воскресенье, 1 - понедельник, ..., 6 - суббота)
- q - номер дня месяца (1-31)
- m - номер месяца (3-14, где 13 и 14 соответствуют январю и февралю предыдущего года)
- K - последние две цифры года
- J - первые две цифры года

Пример расчета дня недели для даты 15 апреля 2022 года:
- q = 15
- m = 5 (апрель соответствует 5 месяцу, так как январь и февраль предыдущего года имеют номера 13 и 14)
- K = 22 (последние две цифры года 2022)
- J = 20 (первые две цифры года 2022)

Подставляем значения в формулу:

h = (15 + floor(13*(5+1)/5) + 22 + floor(22/4) + floor(20/4) - 2*20) mod 7
h = (15 + floor(78/5) + 22 + 5 + 5 - 40) mod 7
h = (15 + 15 + 22 + 5 + 5 - 40) mod 7
h = 22 mod 7
h = 1

Таким образом, для даты 15 апреля 2022 года номер дня недели равен 1, что соответствует понедельнику.

*/


#include <iostream>
#include <string>
#include <cmath>
using namespace std;

std::string get_day_of_week(int d) {
    // Вычисляем номер года
    int y = d % 100;
    int c = d / 10000;
    int year = 1900 + c * 100 + y;
    // Вычисляем номер месяца и дня месяца
    int m = (d / 100) % 100;
    int day = d % 100;
    // Если месяц январь или февраль, то вычитаем из номера года 1
    if (m <= 2) {
        year--;	
        m += 12;
    }
    // Вычисляем номер дня недели
    int w = (day + std::floor(2.6 * m - 0.2) - 2 * std::floor(year / 100) +
        year + std::floor(year / 4) + std::floor(std::floor(year / 100) / 4)) % 7;
    // Возвращаем название дня недели
    switch (w) {
    case 0: return "Воскресенье";
    case 1: return "Понедельник";
    case 2: return "Вторник";
    case 3: return "Среда";
    case 4: return "Четверг";
    case 5: return "Пятница";
    case 6: return "Суббота";
    default: return "";
    }
}

int main() {
    setlocale (LC_ALL, "RUS");
    int d = 120461;
    std::cout << get_day_of_week(d) << std::endl; // Четверг
    return 0;
}
